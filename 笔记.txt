
本期最受欢迎	http://www.xiachufang.com/explore/	
新秀菜谱		http://www.xiachufang.com/explore/rising/
往期头条		http://www.xiachufang.com/explore/head/
厨房101		    http://www.xiachufang.com/explore/honor/
月度最佳		http://www.xiachufang.com/explore/monthhonor/
最新创建		http://www.xiachufang.com/explore/created/
流行菜单		http://www.xiachufang.com/explore/menu/pop/
用户		    http://www.xiachufang.com/cook/10000025/

轮播图的图片，取往期头条数据库的前5张
正则	@(.*)|\?(.*)

recipe/101874529	被大家加入到以下菜单	recipe_list/100080426 ...

    每个recipe_list表，存储菜谱图，菜谱名，菜谱评分，菜谱链接，菜单创建人
    用第一个菜谱图做recipe_list表的封面

recipe/103951128	相关分类	 家常菜(导航） 下饭菜 鱼香	    3个分类都可以找到菜谱，点击进去导航分类固定为家常菜


1.搜索功能（搜索用户/菜谱，模糊查询）
2.注册，登录，用户中心，退出
    登录后首页登录框变为用户信息，出现创建菜谱入口

3.用户表
4.用户作品展示
5.分类可以写模板

AccessKeyID：
LTAI4Fo6Xjni9hY1XCWvyzpi
AccessKeySecret：
0HmE4InzQuCAs2XRAGbIpGBxmX5ZVh


//配置session
server.use(session({
  secret: 'keyboard cat', //秘钥，自定义，一般用不到
  resave: false,
  saveUninitialized: true
}));
//设置session 实例 req.session.name="ali";
server.get('/a', (req, res) =>{
  req.session.name = "ali";
  req.session.flag = true;
  res.send('index.page');
})
//使用session实例 req.session.name
server.get('/login', (req, res) => {
  if (req.session.flag == true) {
    res.send('欢迎' + req.session.name);
  } else {
    res.send('登陆过期');
  }
})
server.get('/loginOut', function (req, res) {
  req.session.name = null;
  req.session.flag = false;
  res.send('退出登录');
})

jquey:轮播图笔记
https://blog.csdn.net/qq_36337754/article/details/100093974
$(…)[0] 返回的是一个dom对象
而 attr() 方法 只能被JQuery对象所使用
所以，可以用$(…).eq()


项目中暂时用服务器端跨域
res.writeHead(200,{...})

工作中：
//1、引入http模块—专门用于创建http服务
const http=require("http");
const url=require("url");
//2、用http模块创建一个http服务端程序（可接受其他地方发来的http请求）
http.createServer((req,res)=>{
  //每收到一次请求，就自动执行回调函数
  //req是封装请求信息的对象
  //比如：获得客户端参数，req.body(post请求），req.query(get请求)
  //res是封装响应功能的对象，可向客户端写回响应结果
  //url:"http://localhost:3000?callback=doit"
  req.url=url.parse(req.url,true)
  /*req.url:{
    protocol:http,
    host:localhost:3000,
    port:3000,
    ...,
    query:{
      callback:doit
    }
  }*/

//①客户端发送<script src="url?callback=客户端函数名"     
jsonp自动为success生成随机函数名 `${fun}` 就是请求成功后执行的函数
为什么这样可以跨域？
//服务器端拿到请求里的客户端函数名，存储到fun
  var fun=req.url.query.callback; 
  console.log(fun);//doit
  var weather="晴 -10~-2 from dong";
  //res.write(weather);
  setTimeout(function(){
    //②将函数名拼接到res.write()中，`${fun}`代替写死的函数名	
    res.write(`${fun}('${weather}')`) 
    res.end();//结束写入响应内容，并返回响应
  },6000);//延迟6秒返回
}).listen(3000,function(){
  console.log("服务端已启动，监听3000端口...");
});
//终端中: node server.js
//浏览器中测试: http://同桌IP:3000
